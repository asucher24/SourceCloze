"""
Django settings for sourcecloze project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

from configobj import ConfigObj
from .settings import BASE_DIR
import errno
import os
from dotenv import load_dotenv

# project_folder = os.path.expanduser(BASE_DIR)  # adjust as appropriate
# load_dotenv(os.path.join(project_folder, '.env'))
load_dotenv(os.path.join(BASE_DIR, 'config', '.env'))


######################################################################
####################### DJANGO SETTINGS ##############################
######################################################################

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
VIRTUALENV = os.getenv('VIRTUAL_ENV')
URL = os.getenv('URL')
DEBUG = os.getenv('DEBUG') == 'True'
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')
ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS', '*').split(' ')

SU_UNAME=os.getenv('DJANGO_SUPERUSER')
SU_NAME=os.getenv('DJANGO_NAME').split(' ')
SU_PW=os.getenv('DJANGO_PW')
SU_MAIL=os.getenv('DJANGO_MAIL')
DEFAULT_FORBIDDEN_REGEX_FILE=os.getenv('DEFAULT_FORBIDDEN_REGEX_FILE')
DEFAULT_COMPILE_TIMEOUT_S=int(os.getenv('DEFAULT_COMPILE_TIMEOUT_S'))

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_HSTS_SECONDS = 3600 # 31536000 # = 1 year
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True
SECURE_CONTENT_TYPE_NOSNIFF = True 
SECURE_BROWSER_XSS_FILTER = True
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
X_FRAME_OPTIONS = 'DENY'

ROOT_URLCONF = 'sourcecloze.urls'

# Django internals
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.admindocs' ,  # docstring
]
# Django apps
INSTALLED_APPS += [
    'poll_api',
    'pages',
    'authentication',
]
# additionals
INSTALLED_APPS += [
    # 'sphinxdoc',
    # 'haystack'
    # 'sslserver',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # middleware class to listen in on responses
    # 'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, "assets/templates"),
            os.path.join(BASE_DIR, "assets/plugin"),
            os.path.join(BASE_DIR, "assets/docs"),
            os.path.join(BASE_DIR, "authentication"),
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'sourcecloze.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        #'NAME': os.path.join(BASE_DIR, 'sourcecloze/db.sqlite3'),
        'NAME': os.path.join(BASE_DIR, '.db.sqlite3'),
        'TEST': {
            'NAME': os.path.join(BASE_DIR, '.db.test.sqlite3'),
        },
    }
}
# HAYSTACK_CONNECTIONS = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'INDEX_NAME': os.path.join(BASE_DIR, '.db.sqlite3'),
#     },
# }
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'OPTIONS': {
#             'read_default_file': os.path.join(BASE_DIR, 'config/db.conf'),
#             'init_command': 'SET default_storage_engine=INNODB',
#         },
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/.static/'
STATIC_ROOT = os.path.join(BASE_DIR, '.static/')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'assets/static'),
    os.path.join(BASE_DIR, 'assets/plugin'),
    # os.path.join(BASE_DIR, 'polladmin/pub'),
]




